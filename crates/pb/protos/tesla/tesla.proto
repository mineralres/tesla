
syntax = "proto3";
package tesla;

message Vehicle {
  int64 id = 1;
  int64 vehicle_id = 2;
  string vin = 3;
  string display_name = 4;
  string option_codes = 5;
  repeated string tokens = 6;
  string state = 7;
  bool in_service = 8;
  string id_s = 9;
  bool calendar_enabled = 10;
  int64 api_version = 11;
}

/// 数据推送
message DrivingState {
  int64 timestamp = 1;
  int64 unused_reserved = 2;
  double speed = 3;
  double odometer = 4;
  double soc = 5;
  double elevation = 6;
  double est_heading = 7;
  double est_lat = 8;
  double est_lng = 9;
  double power = 10;
  string shift_state = 11;
  double range = 12;
  double est_range = 13;
  double heading = 14;
}

/// 车辆数据
message VehicleData {
  int64 id = 1;
  int64 user_id = 2;
  int64 vehicle_id = 3;
  string vin = 4;
  string state = 5;
  bool in_service = 6;
  string id_s = 7;
  bool calendar_enabled = 8;
  int64 api_version = 9;
  VehicleDriveState drive_state = 10;
  VehicleClimateState climate_state = 11;
  VehicleChargeState charge_state = 12;
  VehicleGuiSettings gui_settings = 13;
  VehicleState vehicle_state = 14;
  VehicleConfig vehicle_config = 15;
  DrivingState driving_state = 16;
}

/// 驾驶情况
message VehicleDriveState {
  int64 gps_as_of = 1;
  int64 heading = 2;
  double latitude = 3;
  double longitude = 4;
  double native_latitude = 5;
  int64 native_location_supported = 6;
  double native_longitude = 7;
  string native_type = 8;
  int64 power = 9;
  int64 timestamp = 10;
}

/// 天气情况
message VehicleClimateState {
  bool battery_heater = 1;
  // pub battery_heater_no_power: null,
  string climate_keeper_mode = 2;
  int64 defrost_mode = 3;
  double driver_temp_setting = 4;
  int64 fan_status = 5;
  double inside_temp = 6;
  bool is_auto_conditioning_on = 7;
  bool is_climate_on = 8;
  bool is_front_defroster_on = 9;
  bool is_preconditioning = 10;
  bool is_rear_defroster_on = 11;
  double left_temp_direction = 12;
  double max_avail_temp = 13;
  double min_avail_temp = 14;
  double outside_temp = 15;
  double passenger_temp_setting = 16;
  bool remote_heater_control_enabled = 17;
  double right_temp_direction = 18;
  int32 seat_heater_left = 19;
  int32 seat_heater_right = 20;
  bool side_mirror_heaters = 21;
  int64 timestamp = 22;
  bool wiper_blade_heater = 23;
}

/// 车辆充电情况
message VehicleChargeState {
  bool battery_heater_on = 1;
  double battery_level = 2;
  double battery_range = 3;
  double charge_current_request = 4;
  double charge_current_request_max = 5;
  bool charge_enable_request = 6;
  double charge_energy_added = 7;
  double charge_limit_soc = 8;
  double charge_limit_soc_max = 9;
  double charge_limit_soc_min = 10;
  double charge_limit_soc_std = 11;
  double charge_miles_added_ideal = 12;
  double charge_miles_added_rated = 13;
  // pub charge_port_cold_weather_mode: null,
  bool charge_port_door_open = 14;
  string charge_port_latch = 15;
  double charge_rate = 16;
  // pub charge_to_max_range: bool,
  double charger_actual_current = 17;
  // pub charger_phases: null,
  double charger_power = 18;
  double charger_voltage = 19;
  string charging_state = 20;
  string conn_charge_cable = 21;
  double est_battery_range = 22;
  string fast_charger_brand = 23;
  bool fast_charger_present = 24;
  string fast_charger_type = 25;
  double ideal_battery_range = 26;
  bool managed_charging_active = 27;
  // pub managed_charging_start_time: null,
  bool managed_charging_user_canceled = 28;
  int64 max_range_charge_counter = 29;
  double minutes_to_full_charge = 30;
  // pub not_enough_power_to_heat: null,
  bool scheduled_charging_pending = 31;
  // pub scheduled_charging_start_time: null,
  double time_to_full_charge = 32;
  int64 timestamp = 33;
  bool trip_charging = 34;
  double usable_battery_level = 35;
  // pub user_charge_enable_request: null,
}

/// 车辆gui配置
message VehicleGuiSettings {
  bool gui_24_hour_time = 1;
  string gui_charge_rate_units = 2;
  string gui_distance_units = 3;
  string gui_range_display = 4;
  string gui_temperature_units = 5;
  bool show_range_units = 6;
  int64 timestamp = 7;
}

/// 车辆状态
message VehicleState {
  int64 api_version = 1;
  string autopark_state_v2 = 2;
  // pub autopark_style: String,
  bool calendar_supported = 3;
  string car_version = 4;
  int64 center_display_state = 5;
  int64 df = 6;
  int64 dr = 7;
  int64 fd_window = 8;
  int64 fp_window = 9;
  int64 ft = 10;
  // pub homelink_device_count: i64,
  // pub homelink_nearby: bool,
  bool is_user_present = 11;
  // pub last_autopark_error: String,
  bool locked = 12;
  //   media_state: { "remote_control_enabled": true },
  bool notifications_supported = 13;
  double odometer = 14;
  bool parsed_calendar_supported = 15;
  int64 pf = 16;
  int64 pr = 17;
  int64 rd_window = 18;
  bool remote_start = 19;
  bool remote_start_enabled = 20;
  bool remote_start_supported = 21;
  int64 rp_window = 22;
  int64 rt = 23;
  bool sentry_mode = 24;
  bool sentry_mode_available = 25;
  int64 timestamp = 26;
  bool valet_mode = 27;
  bool valet_pin_needed = 28;
  // pub smart_summon_available: bool,
  //   software_update: {
  //     "download_perc": 0,
  //     "expected_duration_sec": 2700,
  //     "install_perc": 1,
  //     "status": ,
  //     "version": "
  //   },
  //   "speed_limit_mode": {
  //     "active": false,
  //     "current_limit_mph": 85.0,
  //     "max_limit_mph": 90,
  //     "min_limit_mph": 50,
  //     "pin_code_set": false
  //   },
  // pub summon_standby_mode_enabled: bool,
  // pub sun_roof_percent_open: i64,
  // pub sun_roof_state: String,
  //   vehicle_name": null
}

/// 车辆配置
message VehicleConfig {
  bool can_accept_navigation_requests = 1;
  bool can_actuate_trunks = 2;
  string car_special_type = 3;
  string car_type = 4;
  string charge_port_type = 5;
  bool default_charge_to_max = 6;
  bool ece_restrictions = 7;
  bool eu_vehicle = 8;
  string exterior_color = 9;
  bool has_air_suspension = 10;
  bool has_ludicrous_mode = 11;
  bool motorized_charge_port = 12;
  bool plg = 13;
  int64 rear_seat_heaters = 14;
  int64 rear_seat_type = 15;
  bool rhd = 16;
  int64 timestamp = 17;
  string trim_badging = 18;
  bool use_range_badging = 19;
  string wheel_type = 20;
  // pub roof_color: None,
  // pub seat_type: null,
  // pub spoiler_type: None,
  // pub sun_roof_installed: null,
  // pub third_row_seats: None,
}

/// trip snapshot
message TripSnapshot {
  int64 timestamp = 1;
  double longitude = 2;
  double latitude = 3;
  double elevation = 4;
  double inside_temperature = 5;
  double outside_temperature = 6;
}

/// trip
message Trip {
  int64 timestamp = 1;
  string start_address = 2;
  string finish_address = 3;
  repeated TripSnapshot track = 4;
}

/// charge duration
message HistoryCharge { repeated VehicleChargeState details = 1; }